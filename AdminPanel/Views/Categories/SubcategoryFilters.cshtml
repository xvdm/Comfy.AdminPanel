@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SubcategoryFiltersViewModel
@{
    ViewData["Title"] = "Фільтри підкатегорій";
}


<div class="Page">
    <div class="header">
        <div class="namePage">
            <p>Фільтри підкатегорій</p>
        </div>
    </div>
    <div class="body body-with-sections">
        <a asp-action="QueryStringFaq" asp-controller="Faq">Що таке query string?</a>
        <div class="section">
            <div class="search-block">
                <form asp-controller="Categories" asp-action="SubcategoryFilters" id="search-form">
                    <input class="search-block-input" type="text" name="searchString" id="searchString" />
                    <button class="search-block-btn" type="submit" value="Пошук" onclick="updateQueryParameter()">
                        <span class="material-icons "> search </span>
                    </button>
                </form>
            </div>
        </div>
        <div class="section">
            <h6>Додати фільтр до підкатегоріі</h6>
            <form method="post" asp-controller="Categories" asp-action="AddSubcategoryFilter">
                <input name="SubcategoryId" placeholder="id підкатегорії"/>
                <input name="SubcategoryFilterName" placeholder="ім`я фільтру"/>
                <input name="SubcategoryFilter" placeholder="query string"/>
                <button type="submit">Додати</button>
            </form>
        </div>
        <div class="section">
            <h6>Видалити фільтр до підкатегоріі</h6>
            <form method="post" asp-controller="Categories" asp-action="DeleteSubcategoryFilter">
                <input name="Id" placeholder="id фільтру"/>
                <button type="submit">Видалити</button>
            </form>

        </div>
        <div class="section">
            <table class="table">
                <thead class="thead-light">
                <tr>
                    <th>Id</th>
                    <th>Subcategory</th>
                    <th>Name</th>
                    <th>FilterQuery</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var filter in Model.SubcategoryFilters)
                {
                    <tr>
                        <td>@filter.Id</td>
                        <td>@filter.SubcategoryId | @filter.Subcategory.Name</td>
                        <td>@filter.Name</td>
                        <td>@filter.FilterQuery</td>
                    </tr>
                }
                </tbody>
            </table>

            <div class="pagination-block">
                @if (Model?.TotalPages > 1)
                {
                    <div class="pagination-section">
                        @if (Model.CurrentPage == 1)
                        {
                            <button class="page-num">Previous</button>
                        }
                        else
                        {
                            <form class="page-form" method="get" asp-controller="Categories" asp-action="SubcategoryFilters">
                                <input type="hidden" name="searchString" value="@Context.Request.Query["searchString"]" />
                                <input type="hidden" name="pageNumber" value="@(Model.CurrentPage - 1)" />
                                <button class="page-num" type="submit">Previous</button>
                            </form>
                        }

                        @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            @if (i == Model.CurrentPage)
                            {
                                <form class="current-page-form" method="get" asp-controller="Categories" asp-action="SubcategoryFilters">
                                    <input type="hidden" name="searchString" value="@Context.Request.Query["searchString"]" />
                                    <input type="hidden" name="pageNumber" value="@i" />
                                    <button type="submit">@i</button>
                                </form>
                            }
                            else
                            {
                                <form class="page-form" method="get" asp-controller="Categories" asp-action="SubcategoryFilters">
                                    <input type="hidden" name="searchString" value="@Context.Request.Query["searchString"]" />
                                    <input type="hidden" name="pageNumber" value="@i" />
                                    <button type="submit">@i</button>
                                </form>
                            }
                        }

                        @if (Model.CurrentPage == Model.TotalPages)
                        {
                            <button class="page-num" type="submit">Next</button>
                        }
                        else
                        {
                            <form class="page-form" method="get" asp-controller="Categories" asp-action="SubcategoryFilters">
                                <input type="hidden" name="searchString" value="@Context.Request.Query["searchString"]" />
                                <input type="hidden" name="pageNumber" value="@(Model.CurrentPage + 1)" />
                                <button class="page-num" type="submit">Next</button>
                            </form>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    function updateQueryParameter() {
        var form = document.getElementById("search-form");
        var searchString = document.getElementById("searchString").value;

        var currentUrl = window.location.href;

        // Check if the URL already contains a query string
        if (currentUrl.indexOf("?") !== -1) {
            // Split the URL into base URL and query string
            var parts = currentUrl.split("?");
            var baseUrl = parts[0];
            var queryString = parts[1];

            // Split the query string into individual parameters
            var parameters = queryString.split("&");

            // Find and replace the searchString parameter
            for (var i = 0; i < parameters.length; i++) {
                if (parameters[i].startsWith("searchString=")) {
                    parameters[i] = "searchString=" + searchString;
                }
                else if (parameters[i].startsWith("pageNumber=")) {
                    parameters[i] = "pageNumber=1";
                }
            }

            // Combine the base URL, modified query string, and form action
            form.action = baseUrl + "?" + parameters.join("&");
        } else {
            // Create a new query string with the new parameter
            form.action = currentUrl + "?searchString=" + searchString;
        }
    }
</script>